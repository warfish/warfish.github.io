---
author: wrfsh
comments: true
date: 2013-05-13 14:15:14+00:00
layout: post
slug: extensible-boot-platform
title: Extensible Boot Platform
wordpress_id: 20
tags:
- preboot
---

_Problem statement:_

Есть определенное количество кода, который должен работать до загрузки операционной системы. Bootloader, особенно те, что работают на тонких клиентах. Агенты preboot authentication и низкоуровнего форматирования дисков. Антивирусные сканеры и антируткиты. Всем им нужен определенный функционал и исполняемое окружение. Исторически таким окружением служит [BIOS](http://en.wikipedia.org/wiki/BIOS) в реальном (в лучшем случае защищенном) режиме. В последнее время [UEFI](http://www.uefi.org/).

Неудобство такого окружения в том, что даже в защищенном режиме нет защиты памяти, поддержки дополнительных устройств (сеть, USB), нормального пользовательского ввода и вывода. С появлением UEFI ситуация улучшается, но появляется проблема двух платформ.

_Vision_:

Extensible Boot Platform - платформа, портируемая на BIOS и UEFI, расширяемая пользовательским кодом бизнес логики. Предоставляет набор runtime сервисов для клиентского кода, среду выполнения с защитой памяти, абстрагированный доступ к современной аппаратуре и простую драйверную модель. Ориентирована на поддержку загрузчиков ОС с продвинутыми функциями.

_Must have:_



	
  * Execution in protected mode with memory protection

	
  * Modern hardware support: PCI, (IO-)APIC, AHCI, USB.

	
  * Network support: Ethernet, UDP, IP.

	
  * CRT subset implementation and support for modern compilers

	
  * Hardware state management to support chainboot into host OS.

	
  * Fast boot time


_Nice to have:_



	
  * Unicode

	
  * Simplistic GUI toolkit with pointer device support

	
  * Localization

	
  * File systems


_Non-issue, что не включается в скоуп:_



	
  * SMP

	
  * Processes and threads.

	
  * Users, user context and user rights management

	
  * [Paging](http://en.wikipedia.org/wiki/Paging)


_Почему EBP это не UEFI:_

UEFI отвечает за низкоуровневую инициализацию железа, зависимую от конкретной модели чипсета и топологии устройств на отдельно взятой материнской плате. EBP предоставляет слой абстракции над UEFI, унифицируя набор предоставляемых сервисов как между версиями UEFI так и между Legacy BIOS и UEFI.

_Почему EBP это не однопроцессная ОС:_

EBP существует в виде библиотеки бинарного кода, реализующей предоставляемые сервисы и статически линкующейся с пользовательским кодом для получения исполняемого образа ядра. Пользовательский код не существует в виде одного отдельного исполняемого процесса, вместо этого он  является полезной нагрузкой самого ядра.

_Почему EBP это не GRUB:_

EBP не выполняет функцию загрузчика ОС сам по себе. Вместо этого он ориентирован на делегирование пользовательскому коду любого реально полезного функционала, четко разграничивая свою зону ответственности и явно предоставляя сервисы для поддержки расширений.

_Модель разработки:_

Open-source, максимальное заимствование кода драйверов и стеков протоколов.

_Это реально сделать?_

Все реально сделать имея неограниченные ресурсы. Не имея неограниченных ресурсов все можно попытаться оценить, представить сроки, стоимость и принять взвешенное решение. И именно так я и **не** ответил на этот вопрос сам :)
