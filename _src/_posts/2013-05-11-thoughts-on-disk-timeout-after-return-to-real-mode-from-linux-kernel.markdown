---
author: wrfsh
comments: true
date: 2013-05-11 09:56:34+00:00
layout: post
slug: thoughts-on-disk-timeout-after-return-to-real-mode-from-linux-kernel
title: Thoughts on disk timeout after return to real mode from linux kernel
wordpress_id: 2
tags:
- BIOS
- device state
---

Читаю про PCI шину. Она полностью конфигурируется программно и на стадии инициализации железа прошивка (а потом ОС) раздает каждому подключенному устройству ресурсы. Ресурсы включают в себя адресное пространство x86 I/O портов и линий прерываний через которые процессор общается с устройством, а устройство сигнализирует свое состояние. Делается это через [PCI Configuration Space](http://en.wikipedia.org/wiki/PCI_configuration_space), который доступен сразу через host bridge по портам CF8 для задания адреса устройства и CFC для чтения и записи конфигурации.

Нет ничего удивительного в том, что BIOS и ядро ОС раздают эти ресурсы по-разному. И соответственно нет ничего удивительного в том, что возвращаясь в реальный режим после линуксового ядра INT13h начинает возвращать таймауты дискового запроса: скорее всего BIOS ожидает ответа IDE/AHCI/RAID/SCSI контроллера на другом порту/линии прерывания.

Вообще это звучит как приговор для попыток решить задачу состояния устройств в общем случае, однако чтобы подтвердить такую теорию нужно делать обход PCI шины и дампить PCI Configuration Space для каждого подключенного устройства до загрузки ядра и после возврата в реальный режим и сравнивать их. Далее можно либо пытаться вернуть конфигурацию к предыдущим значениям, либо пытаться заставить ядро не переконфигурировать ничего, что может привести к неожиданным последствиям. Так или иначе, задача видится как очень объемная, если конечно не пытаться решить ее как WinMagic - топорно и только для SATA дисков в AHCI режиме.

Интересно то, что после возврата продолжают работать COM порты, видимо потому что они подключены к ISA шине через [PCI bridge](http://en.wikipedia.org/wiki/Conventional_PCI).

TOREAD:
TLDP Linux PCI handling: [http://tldp.org/LDP/tlk/dd/pci.html](http://tldp.org/LDP/tlk/dd/pci.html)
LDD chapter 12 "PCI drivers": [http://lwn.net/images/pdf/LDD3/ch12.pdf](http://lwn.net/images/pdf/LDD3/ch12.pdf)
