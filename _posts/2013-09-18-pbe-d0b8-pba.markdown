---
author: wrfsh
comments: true
date: 2013-09-18 15:01:46+00:00
layout: post
slug: pbe-%d0%b8-pba
title: PBE и PBA
wordpress_id: 228
tags:
- preboot
---

На текущий момент кажется, что разделение PBE и PBA пошло обоим на пользу, хотя и было местами болезненным. Между ними складываются отношения как между операционной системой и приложением. PBA (или его заменитель) даже собирается в PE exe, линкуясь с неким подобием рантайма для PBE. PBE конечно осью назвать нельзя, тем не менее у него есть ряд зачаточных признаков как-то:



	
  * Загрузка на голом железе

	
  * Определение, прости господи, интерфейса чем-то напоминающего системные вызовы.

	
  * Модель драйверов и устройств.

	
  * Защита памяти.

	
  * Загрузка пользовательского приложения в качестве полезной нагрузки.


Конечно почти ничего из этого не сделано с нуля.

PBE это пошло на пользу в плане его генерализации, т.е. обобщения до некой очень специфически ориентированной платформы, абстрагирующейся от бизнес логики рядом интерфейсов, протоколов и контрактов. Это позволяет с одной стороны иметь несколько реализаций PBE, включая, например, эмуляцию; делает возможным удобное тестирование с другой стороны и расширяет области применимости с третьей.

Для PBA польза также в обобщении - его определение расширяется и во-многом упрощается. Для PBA существует набор условий, в которых он работает, как-то защищенный режим, libc, подмножество плюсового рантайма, вызовы PBE. Каким образом это было достигнуто его не заботит. Ответ на вопрос что можно а что нельзя реализовать становится прямолинейным - можно то, для чего хватает описанных условий.

Эта условия вырисовываются именно такими, потому что до определенного уровня клиент диктует платформе, что должно быть поддержано - платформа без клиента не имеет смысла. С другой стороны всегда стоят реалии того, сколько будет стоить реализация таких требований и запросы балансируются с возможностями. И это правильно, хотя технически всегда хочется сделать больше и богаче, чем нужно.
