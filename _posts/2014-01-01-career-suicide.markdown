---
author: wrfsh
comments: true
date: 2014-01-01 08:56:22+00:00
layout: post
slug: career-suicide
title: Career suicide
wordpress_id: 312
---

Я стараюсь держать этот блог строго техническим, а не личным, но раз в год можно.

Я научился проходить собеседования на С++ девелопера до того как научился программировать на нем. :) Это очень просто. С++ такой язык, что можно долго радовать собеседников деталями реализации виртуальных функций, лейаутом объектов в памяти, отличием ++i от i++ и тому подобной мишурой, которая хотя и полезна, но вовсе не подразумевает способности собеседуемого решать на этом языке задачи, т.е. _программировать_. И это не было каким-то хитрым планом, попыткой обмануть - я искренне считал что этого достаточно.

До того как научится проходить собеседования на С++ девелопера я умел хорошо кодить на ANSI C. Это тоже было очень далеко от инжиниринга и дизайна чего-то большого, развесистого и требующего планирования. Почему от кодинга на сях я перешел в детали работы виртуальных функций, а не в инжиниринг? Я пытался, но от книг типа [design patterns](http://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612), [OOSC](http://www.amazon.com/Object-Oriented-Software-Construction-Book-CD-ROM/dp/0136291554) и [SICP](http://www.amazon.com/Structure-Interpretation-Computer-Programs-Engineering/dp/0262510871) я засыпал через каждые 20 страниц, хотя домучил все три. [Code complete](http://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670) и [Алгоритмы](http://www.amazon.com/Introduction-Algorithms-Thomas-H-Cormen/dp/0262033844) были интереснее, но по-настоящему интересными книгами того времени для меня были [Expert C](http://www.amazon.com/Expert-Programming-Peter-van-Linden/dp/0131774298), [LK](http://www.amazon.com/Understanding-Linux-Kernel-Third-Edition/dp/0596005652) и [LKD](http://www.amazon.com/Linux-Kernel-Development-Robert-Love/dp/0672329468) (к слову я смотрю на GNU-манифест и прочую романтику как на ребячество, а в худшем случае как на рак мозга).

Теперь, когда я пытаюсь делать дизайн крупной фичи, декомпозировать ее и высосать из пальца объекты, то мозг скрипит и сопротивляется. В итоге получается в основном хорошо, но очень болезненно. Приятная, интересная и в результате более продуктивная и результативная работа для меня выглядит примерно так: у меня есть черный ящик, который что-то делает, не понятно что. Возможно понятно что он делает, но он запутан деталями. Мне нужно разобраться как с ним работать и абстрагировать его за простым API, который состоит из нескольких простых функций и структур данных. Я чувствую большое удовлетворение от такой работы: от процесса исследования ящика и от дизайна API, который, самое главное, сильно упрощает кому-то жизнь. Ящиком может быть железка, какой-то системный алгоритм вроде DMA или виртуальной памяти. Ящиком может быть какое-нибудь красно-черное дерево. Ящиком может быть непонятный баг. Так или иначе в таком направлении мозг не скрипит, а легко скользит.

Все это хорошо, знать свои сильные и слабые стороны хорошо, но еще я хочу карьеру, а карьера подразумевает повышение уровня ответственности, который, как правило влечет за собой повышение уровня абстракции. И тут мне кажется, что это идет вразрез с тем что я умею хорошо и с тем, что не очень. Я конечно могу в итоге дойти до уровня чувака, который знает всю системную канализацию настолько хорошо, что может по фотографии электромагнитного излучения выполняемого кода угадать что не так и снять порчу, но это все сказки, потому что такие обычно живут в горах, требуют задавать им не больше трех вопросов в день и отрешаются от всего мирского. На самом деле в реальности они живут скорее в подвале у мамы, чем в горах, но остальное верно.

Речь не идет о "нравится - не нравится", нет в моей работе сейчас ничего, что я заставлял бы себя делать насильно, за мелкими исключениями. Если исходить из прагматических соображений, то все просто: у меня хорошо получается одно и не очень хорошо получается второе, но именно второе видится как основное, в чем нужно быть успешным, чтобы карьерно расти.
